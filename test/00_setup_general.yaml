# General setup - Secrets and base resources
apiVersion: v1
kind: Namespace
metadata:
  name: backup-test
  labels:
    name: backup-test
---
# MinIO S3-compatible storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-storage
  namespace: backup-test
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
  storageClassName: standard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: backup-test
  labels:
    app: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          image: minio/minio:latest
          command:
            - /bin/bash
            - -c
            - minio server /data --console-address :9001
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 1000m
              memory: 1000Mi
          ports:
            - name: api
              containerPort: 9000
            - name: console
              containerPort: 9001
          env:
            - name: MINIO_ROOT_USER
              value: minioadmin
            - name: MINIO_ROOT_PASSWORD
              value: minioadmin
          volumeMounts:
            - name: minio-storage
              mountPath: /data
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            initialDelaySeconds: 30
            periodSeconds: 10
      volumes:
        - name: minio-storage
          persistentVolumeClaim:
            claimName: minio-storage
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: backup-test
  labels:
    app: minio
spec:
  selector:
    app: minio
  ports:
    - name: api
      port: 9000
      targetPort: 9000
    - name: console
      port: 9001
      targetPort: 9001
  type: ClusterIP

---
# Job to initialize required buckets in MinIO using mc
apiVersion: batch/v1
kind: Job
metadata:
  name: init-minio-buckets
  namespace: backup-test
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: mc
          image: minio/mc:latest
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 200m
              memory: 200Mi
          command:
            - /bin/sh
            - -c
            - |
              set -euo pipefail
              until mc alias set myminio http://minio.backup-test:9000 minioadmin minioadmin >/dev/null 2>&1; do
                echo "waiting for minio (mc alias set)..."
                sleep 2
              done
              mc mb -p myminio/onsite-backups || true
              mc mb -p myminio/offsite-backups || true
