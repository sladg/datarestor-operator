apiVersion: v1
kind: Namespace
metadata:
  name: manual-test
  labels:
    name: manual-test
---
# Restic secret for S3 credentials
apiVersion: v1
kind: Secret
metadata:
  name: restic-secret
  namespace: manual-test
type: Opaque
stringData:
  AWS_ACCESS_KEY_ID: "minioadmin"
  AWS_SECRET_ACCESS_KEY: "minioadmin"
---
# MinIO S3-compatible storage for testing
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-storage
  namespace: manual-test
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: manual-test
  labels:
    app: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          image: minio/minio:latest
          command:
            - /bin/bash
            - -c
          args:
            - minio server /data --console-address :9001
          env:
            - name: MINIO_ROOT_USER
              value: "minioadmin"
            - name: MINIO_ROOT_PASSWORD
              value: "minioadmin"
          ports:
            - containerPort: 9000
              name: api
            - containerPort: 9001
              name: console
          volumeMounts:
            - name: storage
              mountPath: /data
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            initialDelaySeconds: 30
            periodSeconds: 30
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: minio-storage
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: manual-test
  labels:
    app: minio
spec:
  type: ClusterIP
  ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
      name: api
    - port: 9001
      targetPort: 9001
      protocol: TCP
      name: console
  selector:
    app: minio
---
# Sample PVC to test manual backup
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: test-manual-pvc
  namespace: manual-test
  labels:
    app: manual-test
    backup: enabled
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
  storageClassName: standard
---
# Sample pod to write some test data
apiVersion: v1
kind: Pod
metadata:
  name: test-data-writer
  namespace: manual-test
  labels:
    app: manual-test
spec:
  containers:
    - name: writer
      image: busybox:latest
      command:
        - /bin/sh
        - -c
        - |
          echo "Creating test data for manual backup..."
          mkdir -p /data/test
          echo "Manual backup test data - $(date)" > /data/test/manual-backup-test.txt
          echo "File 1 content" > /data/test/file1.txt
          echo "File 2 content" > /data/test/file2.txt
          echo "Test data created successfully!"
          ls -la /data/test/
          cat /data/test/manual-backup-test.txt
          echo "Sleeping to keep pod running..."
          sleep 3600
      volumeMounts:
        - name: test-storage
          mountPath: /data
  volumes:
    - name: test-storage
      persistentVolumeClaim:
        claimName: test-manual-pvc
  restartPolicy: Never
---
# BackupConfig to manage the test PVC
apiVersion: backup.datarestor-operator.com/v1alpha1
kind: BackupConfig
metadata:
  name: manual-test-backup
  namespace: manual-test
spec:
  pvcSelector:
    namespaces: ["manual-test"]
    labelSelector:
      matchLabels:
        backup: enabled

  backupTargets:
    - name: test-s3
      priority: 1
      restic:
        repository: "s3:http://minio.manual-test.svc.cluster.local:9000/manual-test-bucket"
        env:
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: restic-secret
                key: AWS_ACCESS_KEY_ID
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: restic-secret
                key: AWS_SECRET_ACCESS_KEY

  schedule:
    cron: "0 0 1 1 *" # Run once a year (effectively never) for manual-only backups
    waitForHealthy: true
    stopPods: false

  autoRestore: false # Don't auto-restore for this test
