# Database application for testing backup/restore
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data
  namespace: backup-test
  labels:
    backup: "enabled"
    environment: "test"
    app: postgres
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init
  namespace: backup-test
data:
  init.sql: |
    CREATE TABLE IF NOT EXISTS test_data (
        id SERIAL PRIMARY KEY,
        name VARCHAR(100),
        data TEXT,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    INSERT INTO test_data (name, data) VALUES
    ('Initial Record', 'This is the initial test data'),
    ('Backup Test', 'This record should survive backup/restore'),
    ('Test Entry 3', 'Third test entry with timestamp');
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: backup-test
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:13
          env:
            - name: POSTGRES_DB
              value: testdb
            - name: POSTGRES_USER
              value: testuser
            - name: POSTGRES_PASSWORD
              value: testpass123
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U testuser -d testdb
            initialDelaySeconds: 15
            periodSeconds: 5
        - name: data-inserter
          image: postgres:13
          command: ["/bin/bash"]
          args:
            - -c
            - |
              echo "Waiting for PostgreSQL to be ready..."
              while ! pg_isready -h localhost -U testuser -d testdb; do
                sleep 2
              done

              echo "Starting data insertion loop..."
              counter=1
              while true; do
                PGPASSWORD=testpass123 psql -h localhost -U testuser -d testdb -c \
                  "INSERT INTO test_data (name, data) VALUES ('Auto Entry $counter', 'Generated at $(date)');"
                echo "Inserted record #$counter at $(date)"
                counter=$((counter + 1))
                sleep 120  # Insert every 2 minutes
              done
          env:
            - name: PGPASSWORD
              value: testpass123
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data
        - name: init-scripts
          configMap:
            name: postgres-init
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: backup-test
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
  type: ClusterIP
