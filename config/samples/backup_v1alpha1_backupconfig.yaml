apiVersion: backup.autorestore-backup-operator.com/v1alpha1
kind: BackupConfig
metadata:
  name: backupconfig-restic-example
  namespace: default
spec:
  # Backup targets using Restic
  backupTargets:
    # S3-compatible storage via Restic
    - name: s3-backup
      priority: 1
      restic:
        repository: "s3:s3.amazonaws.com/my-backup-bucket"
        passwordSecretRef:
          name: restic-secret
          key: password
        env:
          - name: AWS_ACCESS_KEY_ID
            value: "your-access-key"
          - name: AWS_SECRET_ACCESS_KEY
            value: "your-secret-key"
          - name: AWS_DEFAULT_REGION
            value: "us-west-2"
        tags:
          - "production"
          - "daily-backup"
        host: "k8s-cluster-1"
        flags:
          - "--verbose"
          - "--compression=auto"
        image: "restic/restic:latest"
      retention:
        maxSnapshots: 30
        maxAge: "2160h"

    # NFS storage via Restic (using CSI driver)
    - name: nfs-backup
      priority: 2
      restic:
        repository: "local:/mnt/backup/restic-repo"
        passwordSecretRef:
          name: restic-secret
          key: password
        tags:
          - "local-backup"
          - "redundant"
        host: "k8s-cluster-1"
        flags:
          - "--no-lock" # Important for NFS
        image: "restic/restic:latest"
      nfs:
        server: "nfs.example.com"
        path: "/exports/backup"
        mountPath: "/mnt/backup"
        mountOptions:
          - "nfsvers=4.1"
          - "hard"
          - "noatime"
      retention:
        maxSnapshots: 15
        maxAge: "1080h" # 45 days

  # PVC selection criteria
  pvcSelector:
    labelSelector:
      matchLabels:
        app: database
        backup: "true"
    namespaces:
      - "production"
      - "staging"
    names:
      - "postgres-data"
      - "mysql-data"

  # Backup schedule
  schedule:
    cron: "0 2 * * *" # Daily at 2 AM
    waitForHealthy: true
    stopPods: false

  # Auto-restore for new PVCs
  autoRestore: true

  # Retention policy (applied to all targets)

  # Init container for restore waiting
  initContainer:
    image: "busybox:1.35"
    command: ["/bin/sh"]
    args: ["-c", "echo 'Waiting for restore to complete...' && sleep 10"]
---
apiVersion: v1
kind: Secret
metadata:
  name: restic-secret
  namespace: default
stringData:
  password: your-encryption-password
